/*
    Basic watchlist concept

    1. List header contains user generated or autogenerated list cover based on item count in list
    2. List offers a few different views grid / list
    3. User can add custom description

*/


'use client'
import { TMDBMovieDetails } from "@/server/tmdb/interface"
import { useEffect , useState } from "react"
import { posterImage } from "@/util/helper"
import PosterView from "./PosterView"
import ListView from "./ListView"
import EmptyMesage from "./EmptyMessage"
import {LuListMinus} from 'react-icons/lu'
import { PiSquaresFourFill } from "react-icons/pi"


export default function List() {
    const [list,  setList] = useState<TMDBMovieDetails[]>([])
    const [view , setView] = useState<boolean>(true)

    useEffect(() => {
        const list: string | null = localStorage.getItem("watchlist")
        if(!list) return
        const foundList = JSON.parse(list)
        setList(foundList)
    }, [])


    const getCurrentView = (list:TMDBMovieDetails[]):JSX.Element => {
        return view ?  <PosterView list={list}/> : <ListView list={list}/>
    }

    const isSelected = ():string => {
        return "#FEA149"
    }

    return (
        <>
    <div className="w-full flex">
        {list.length < 4 ? <div className="w-[232px]  h-[232px] bg-foreground"/> : // shows placeholder cover if length of list is under 4 items 
                <div className="w-[232px] h-[232px] flex-col rounded-md overflow-hidden relative  bg-foreground">
                <div className="w-full flex">
                <div className="w-[116px] h-[116px] relative rounded-md overflow-hidden bg-center bg-no-repeat bg-cover"    style={{
                              backgroundImage: `url(${posterImage(list[0].poster_path)})`
                          }}/>
                   <div className="w-[116px] h-[116px] relative rounded-md  overflow-hidden bg-center bg-no-repeat bg-cover"    style={{
                              backgroundImage: `url(${posterImage(list[1].poster_path)})`
                          }}/>
                </div>
                <div className="w-full flex">
                <div className="w-[116px] h-[116px] relative rounded-md  overflow-hidden bg-center bg-no-repeat bg-cover"    style={{
                              backgroundImage: `url(${posterImage(list[2].poster_path)})`
                          }}/>
                   <div className="w-[116px] h-[116px] relative rounded-md  overflow-hidden bg-center bg-no-repeat bg-cover"    style={{
                              backgroundImage: `url(${posterImage(list[3].poster_path)})`
                          }}/>
                </div>
            </div> }
        <div className="flex-col pl-10 pt-10 text-white">
           <div className="pb-5 text-sm tracking-wider font-extralight">
           <span>Public</span>
           </div>
           <h2 className="tracking-wide pb-10 text-4xl font-medium ">Your Watchlist</h2>
           <p className=" tracking-wider text-sm font-extralight leading-normal w-full">It's awfully kinda boring in here .</p>
        </div>
     </div>
        <div className="w-full  py-16 flex-col">
            <div className=" w-11/12 pb-10 flex justify-end">
                <div className="flex w-20 items-center  justify-between py-[5px]  bg-foreground shadow-lg rounded-sm">
                <div className="pl-3" onClick={() => {setView(true)}}>{<PiSquaresFourFill color={view ? isSelected() : "white"} size="1.2em" />}</div>
                <div className="pr-3" onClick={() => {setView(false)}}>{<LuListMinus color={view ? "white" : isSelected()} size="1.2em" />}</div>

                </div>
            </div>
            {list.length < 1 ? <EmptyMesage/> : getCurrentView(list) }
        </div>
    </> 
    )
}